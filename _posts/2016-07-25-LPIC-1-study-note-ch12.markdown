---
layout: post
title:  "Linux LPIC-1 Study Note(CH12)"
date:   2016-07-25 16:43:00 +0800
categories: [linux, lpic]
---

# Chapter 12: 網路與安全設定 #

網路部分：基本網路概念問題，以及Linux的網路指令與設定檔。

安全部分：系統與網路安全，以及資料加密。

## 基本網路概念 ##

### 常用名詞與基本通訊指令 ###

#### TCP/IP ####

TCP/IP是一種網路通訊協定，他是**網路上的基礎協定**，也是一種**電腦資料打包**和**定址**的標準方法。

底下為TCP封包的Header資訊：

- Source Port
- Destination Port
- Sequence Numver(封包序號)
- Acknowledgment Number(回應序號)
- Data Offset(資料補償)
- Reserved(保留)
- Control Flag(控制旗標)：URG、ACK、PSH、RST、SYN、FIN
- Window(滑動視窗)
- Checksum(確認)
- Urgent Pointer(緊急資料所在位置)
- Option與Padding: 較少使用的欄位

常見的TCP服務包括**telnet**、**SMTP**、**HTTP**等，事實上，大部分的伺服器為了確保資料正確性，都是採用TCP協定。

#### UDP ####

UDP是User Datagram Protocol的簡寫，為用戶資料流協定，他與TCP相似但簡單許多。TCP是可靠的協定，原因是他有**錯誤檢查**與**三段交握**來確認資料的完整性，但UDP是一個「不可靠」的協定，原因是他不能保證資料的正確性。因此若有可靠性要求，則應用程式應避免使用它。

UDP封包header如下：

- UDP Source Port
- UDP Destination Port
- Length
- UDP checksum

常見的UDP服務包括DNS查詢、FTP資料埠的傳輸等。

#### ICMP ####

ICMP是internet control message protocol的簡寫，負責在**IP網路系統**內**傳遞管理**與**錯誤**的訊息。不像TCP與UDP，在ICMP上沒有埠號的資訊。

ICMP的訊息可以分兩類：第一為詢問類，第二為錯誤類，不論哪一類都會送出請求，並等待對方的回應，因此訊息都是雙向的。

常見的ICMP類指令包括ping、traceroute等。

#### TTL ####

TTL是Time To Live的簡寫，也就是封包存活的時間。事實上，它代表的是次數，而不是真正的分秒。

每個封包必定包含TTL這個數值，代表若該封包經過指定的次數的點，如果還沒到達目的地，就自動消失。舉例，封包TTL=63，代表封包經過63個點，若能未到達目的地，則自動消失。

#### 封包資訊 ####

在網路上傳遞資料，都是根據通訊協定來處理，而每一個通訊協定在傳輸資料時，都會將要傳遞的資料拆成小單位的包裏，這樣的包裏就稱為封包。

封包是能夠在網路上面進行傳輸的最小資訊單位。**一個封包包含有發送端節點地址**、**接收端節點地址**、**和這兩個節點之間需要傳送的數據**。

#### 封包過濾 ####

所謂封包過濾，就是針對**封包的Header部分進行資料過濾**，包括來源與目的地、埠號、長度、以及特殊資訊等，過濾的動作包括拒絕、丟棄、轉向等。

封包過濾是一般防火牆必備的功能之一，在Linux上最常用的就是iptables與TCP wrapper。

#### 封包轉址 ####

所謂封包轉址，是將封包轉到本機以外的位址，這樣的功能多半用在**路由器**或是**閘道伺服器**上。這樣的功能可能只是將封包轉向到正確的位址，也有可能變更了部分封包的資訊。

在Linux中，會用來作為封包轉址的工具就是iptables。此外，在Linux中要啟用封包轉送的功能，必須把`/proc/sys/net/ipv4/ip_forward`設為1(default 0)。

#### 網路裝置、網路裝置名稱、網路裝置別名 ####

所謂網路裝置，包含主機板上的網路晶片、一般PCI的網路卡、數據機、光纖裝置等。在Linux系統上，會對這樣的網路裝置賦於一個網路裝置名稱，以RJ45網路線連接的裝置，如網路卡、網路晶片而言，系統會將網路裝置名稱訂為eth0，如果有超過一個的網路裝置，系統會依序訂為eth1、eth2、...；若以撥接裝置，如數據機，系統會將裝置訂為ppp0。

一個網路裝置名稱上會附掛一個網路位址(IP address)，若我們要在一個網路裝置名稱上附掛一個以上的網路位址，就必須使用網路裝置別名了(alias)。

對於一個網路裝置，如eth0，可加上冒號與數字來建立別名，如eth0:0、eth0:1、eth0:2、...。對於不同的別名，我們可以給予不同的網路位址。

#### 網路位址(IP address) ####

在IPv4架構下，網路位置是個32bits的資料，每個bit只有兩種可能：0或1。因此網路位址的分布從32個0到32個1。

00000000000000000000000000000000 到 11111111111111111111111111111111

一般表示法習慣八位加一個點:

00000000.00000000.00000000.00000000 到 11111111.11111111.11111111.11111111

上面是二進位表示法，若改成10進位，則會變成

0.0.0.0到255.255.255.255

由於目前對網路位址的需求日益增加，因此後來產生了新的IPv6架構，容量由原來的32bits增加到128bits。

從0.0.0.0到255.255.255.255，網路位址分為五類：

1. Class A

	網路位址由1.0.0.0到127.0.0.0。

	能擁有一個Class A的網路通常是極大的機構，如國家、教育單位。

2. Class B

	網路位址由128.0.0.0到191.255.0.0。

	能擁有一個Class B的網路通常是大型的機構或學校單位，如大學、政府部門、大型的商業組織

3. Class C

	網路位址由192.0.0.0到223.255.255.0。

	能擁有一個Class C的網路通常是較小型的機構或商業組織，如中小型企業。

4. Class D

	網路位址由224.0.0.0到239.255.255.255，主要為多點傳播，通常使用在特殊的通訊協定上，一般使用不到。

5. Class E

	網路位址由240.0.0.0到255.255.255.255，常用於廣播與**網路遮罩**的使用

#### 子網路遮罩 ####

子網路遮罩的功能就是決定網路位址所在的網路有多大，也就是對於哪些網路位址需使用廣播。若以二進位來看子網路遮罩，必定是以1開頭，若1的右邊出現0，則全部為0。

可透過子網路遮罩判斷網路位址的前幾位是固定的(出現1的部分就是固定的)，並藉此了解網路的大小。

這裡列出Class C以下的子網路遮罩：

11111111.11111111.11111111.11111111=255.255.255.255 <- 0個網路位址

11111111.11111111.11111111.11111110=255.255.255.254 <- 1個網路位址

11111111.11111111.11111111.11111100=255.255.255.252 <- 2個網路位址

11111111.11111111.11111111.11111000=255.255.255.248 <- 4個網路位址

11111111.11111111.11111111.11110000=255.255.255.240 <- 8個網路位址

11111111.11111111.11111111.11100000=255.255.255.224 <- 16個網路位址

11111111.11111111.11111111.11000000=255.255.255.192 <- 32個網路位址

11111111.11111111.11111111.10000000=255.255.255.128 <- 64個網路位址

11111111.11111111.11111111.00000000=255.255.255.0 <- 128個網路位址

※ 經驗談：子網路遮罩能讓我們知道該網段之下有多少IP位址，但實際可用的需要扣掉頭尾的位址，其中第一個位址表**網路**，最後一個為**廣播**，而且通常會有一個是**聯外的閘道位址**，因此可用位址要減3。

#### 網路與廣播 ####

由網路位址與子網路遮罩就可以知道該網路所分配的區段範圍為何，該範圍中的第一個網路位址稱為network，代表整個網路位址，而最後一個網路位址代表廣播，作為廣播通訊之用。

#### 閘道、預設閘道 ####

閘道是一個閘道口，連接內外的網路。作為閘道的主機，可能是一般電腦，可能是IP分享器，也可能是功能較多的交換集線器。

閘道伺服器本身也有網路位址、子網路遮罩、以及閘道等設定，它會將內部網路的封包傳遞到外部網路。

預設閘道是所有主機上必填的網路設定之一(除撥接與動態位址之外)，所有連往區域網路以外的封包，都會被丟到預設閘道上，再由閘道伺服器做後續的處理。

#### 路由表、路由器、多重路由 ####

路由是封包傳遞的路徑，而路由表是記載路由規則的表格。當從A點傳輸資料到B點時，可以傳輸的路徑通常不只一條，而路由表就會記載可以傳輸的路徑。

廣義而言，只要機器會將非本地的封包傳送到正確的目的地，就稱為路由器。但事實上，路由器多半定義了路由表，以便尋找較近的路徑，因此路由器通常是一台獨立的主機，而在Linux上，路由器的功能跟閘道是合一的。

當我們有多條線路，我們會透過路由表定義多重路由，也就是定義不同目的地的路徑規則。舉例，將連網際網路的封包丟給預設閘道，而連往海外公司的封包，則丟給另一台路由器處理。

#### 主機名稱、網域名稱、完整網域名稱 ####

如果主機的DNS對應www.test.com.tw，那麼www為主機名稱，test.com.tw為網域名稱，而www.test.com.tw為完整網域名稱。

主機名稱通常用簡單且符合該主機的功能來命名，如www、mail、ns等；而網域名稱就是我們向ISP註冊的網域名稱，每年需繳500~1500不等；而完整網域名稱就是主機名稱加上網域名稱。

要注意的是，上面的三種名稱都不得以特殊符號命名，允許特殊符號包括「-」與「_」。

#### 網域與子網域 ####

當申請了網域後，可以將網域再往下切割成子網域，子網域的名稱會加在主網域之前，並以「.」做為區隔。e.g. 申請test.com.tw這個網域，可以再將此網域切割為sales.test.com.tw、rd.test.com.tw、account.test.com.tw，並將子網域的命名權交給其他主機。

因此所謂子網域，是定義次層的名稱伺服器，在現實中最常切子網域的應該是學校。

#### http與https ####

一般瀏覽網頁是透過http的通訊協定，並在網址列輸入http://網址。若我們瀏覽加密的網頁時，則會輸入https開頭的網址。

https是http加上ssl(security socket layer)，也就是透過ssl達到加密的效果。在Linux上的ssl套件為openssl，因此要建置含有https服務的伺服器，可透過Apache加上openssl。http使用的埠號為80，而https使用的埠號為443。

#### FTP的命令埠與資料埠 ####

FTP使用命令埠作為命令的傳輸與下達之用，預設值為21；而資料埠是做為資料傳遞之用，預設值為20。

命令埠可讓我們順利連上主機，但要建立檔案的傳輸時，就必須開啟資料埠做資料的傳遞之用。

### 網路相關指令 ###

介紹網路設定與連線查詢的相關指令

#### ifconfig ####

ifconfig是一個查詢與設定網路位址的指令，可以設定網路位址、子網路遮罩與廣播位址。

語法：ifconfig [介面名稱] [參數]

參數如下：

- up：啟動此介面
- down：關閉此介面
- [ -] arp：啟動或是停止此介面上的ARP協定
- [ -] promisc：啟動或是停止此介面上的promisc mode
- [ -] allmulti：啟動或是停止此介面上的all-multicast mode
- metric N：設定介面的長度為N
- mtu N：設定最大的傳輸單位為N
- Netmask 子網路遮罩：設定子網路遮罩
- broadcast廣播位址：設定廣播位址

介面名稱：為網路介面的名稱，通常第一張網路卡為eth0，第二張為eth1...依此類推。

若要顯示eth0裝置的狀態，執行過程如下：

	$ ifconfig eth0
	eth0      Link encap:Ethernet  HWaddr 06:6e:23:ef:45:c5
	          inet addr:172.31.19.185  Bcast:172.31.31.255  Mask:255.255.240.0
	          inet6 addr: fe80::46e:23ff:feef:45c5/64 Scope:Link
	          UP BROADCAST RUNNING MULTICAST  MTU:9001  Metric:1
	          RX packets:828131 errors:0 dropped:0 overruns:0 frame:0
	          TX packets:330809 errors:0 dropped:0 overruns:0 carrier:0
	          collisions:0 txqueuelen:1000
	          RX bytes:818086950 (818.0 MB)  TX bytes:66709269 (66.7 MB)

若要將eth0停用：

	# ifconfig eth0 down

#### ifup ####

ifup是將網路介面啟用的指令，如同ifconfig ... up

語法：ifup [參數] 介面名稱

參數如下：

- -a，--all：啟用所有網路介面
- --force：強迫啟用
- -h，--help
- -V，--version
- -v，--verbose：顯示詳細執行過程

若要啟用網路介面eth0：

	# ifup eth0

#### ifdown ####

ifdown是將網路介面停用的指令，如同ifconfig ... down

語法：ifdown [參數] 介面名稱

參數如下：

- -a，--all：停用所有網路介面
- --force：強迫停用
- -h，--help
- -V，--version
- -v，--verbose：顯示詳細執行過程

若要停用網路介面eth0：

	# ifdown eth0

#### route ####

route是顯示與設定路由表的指令，也就是封包的傳送路徑

語法：route [參數] 內部指令 [內部指令參數]

參數如下：

- -F：儲存核心FIB的route表
- -C：將核心的route快取列出
- -v：詳細顯示執行結果
- -n：以數字顯示，而不做DNS反查
- -e：以netstat編排方式顯示路由狀態

內部指令：

- del | add：刪除 | 增加 指定的路由紀錄
- -net | -host：指定為 網段 | 主機 的位址
- target：目的地位址或網路表示

內部指令參數：

- netmask NM：指定子網路遮罩為NM
- gw IP_addr：指定閘道的IP address為`IP_addr`
- metric M：設定路由表中的長度欄位(metric field)
- mss M：設定TCP最大的區塊長度(Maximum Segment Size)為Mbytes
- reject：指定拒絕的路由。他會強迫對設定位址的路由查詢失敗
- dev IF：指定該路由僅跟特定的裝置IF(如eth0、ppp0)相關

若在eth0的裝置加上一個路由到192.168.10.0(子網路遮罩255.255.255.0)這個網段：

	$ sudo route add -net 192.168.10.0 netmask 255.255.255.0 dev eth0
	$ route
	Kernel IP routing table
	Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
	default         ip-172-31-16-1. 0.0.0.0         UG    0      0        0 eth0
	172.31.16.0     *               255.255.240.0   U     0      0        0 eth0
	192.168.10.0    *               255.255.255.0   U     0      0        0 eth0

若要將原有的閘道位址10.1.1.1停用，而使用新的閘道位址10.1.1.2。

	# route del default gw 10.1.1.1 // 刪除舊的閘道10.1.1.1
	# route add default gw 10.1.1.2 // 增加新的閘道10.1.1.2

#### ping ####

ping是傳送ICMP echo request封包的指令，常用於測試對方的位址是否有回應，使用方式如下所示：

語法：ping [參數] 位址

- -b：對廣播位址